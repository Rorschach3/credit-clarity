name: Build & Deploy

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    name: Production Build Check
    runs-on: ubuntu-latest
    # env:
      # VITE_API_URL: ${{ secrets.VITE_API_URL }}
      # VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      # VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      # VITE_SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.VITE_SUPABASE_SERVICE_ROLE_KEY }}
      # SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      # SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      # SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      # DATABASE_URL: ${{ secrets.DATABASE_URL }}
      # VITE_SUPABASE_PASSWORD: ${{ secrets.VITE_SUPABASE_PASSWORD }}
      # VITE_S3_ACCESS_KEY_ID: ${{ secrets.VITE_S3_ACCESS_KEY_ID }}
      # VITE_S3_SECRET_ACCESS_KEY: ${{ secrets.VITE_S3_SECRET_ACCESS_KEY }}
      # VITE_XAI_API_KEY: ${{ secrets.VITE_XAI_API_KEY }}
      # VITE_ANTHROPIC_API_KEY: ${{ secrets.VITE_ANTHROPIC_API_KEY }}
      # VITE_OPENAI_API_KEY: ${{ secrets.VITE_OPENAI_API_KEY }}
      # OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      # VITE_MODEL: ${{ secrets.VITE_MODEL }}
      # GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      # VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}
      # VERTEXAI_PROJECT_ID: ${{ secrets.VERTEXAI_PROJECT_ID }}
      # VERTEXAI_LOCATION: ${{ secrets.VERTEXAI_LOCATION }}
      # VITE_DOCUMENTAI_URL: ${{ secrets.VITE_DOCUMENTAI_URL }}
      # VITE_DOCUMENTAI_TOKEN: ${{ secrets.VITE_DOCUMENTAI_TOKEN }}
      # OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      # VITE_OPEN_ROUTER_API_KEY: ${{ secrets.VITE_OPEN_ROUTER_API_KEY }}
      # VITE_QDRANT_API_KEY: ${{ secrets.VITE_QDRANT_API_KEY }}
      # STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      # STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
      # NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
      # NODE_ENV: ${{ secrets.NODE_ENV }}
      # GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      # GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      # GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
      # GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
      # UPSTASH_VECTOR_REST_TOKEN: ${{ secrets.UPSTASH_VECTOR_REST_TOKEN }}
      # UPSTASH_VECTOR_REST_READONLY_TOKEN: ${{ secrets.UPSTASH_VECTOR_REST_READONLY_TOKEN }}
      # UPSTASH_VECTOR_REST_URL: ${{ secrets.UPSTASH_VECTOR_REST_URL }}
      # CIRCLECI_API_KEY: ${{ secrets.CIRCLECI_API_KEY }}
      # VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      # RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      # GITHUB_API_KEY: ${{ secrets.GITHUB_API_KEY }}
      # DOCUMENT_AI_PROCESSOR: ${{ secrets.DOCUMENT_AI_PROCESSOR }}
      # DOCUMENT_AI_PROJECT_ID: ${{ secrets.DOCUMENT_AI_PROJECT_ID }}
      # DOCUMENT_AI_LOCATION: ${{ secrets.DOCUMENT_AI_LOCATION }}
      # DOCUMENT_AI_PROCESSOR_ID: ${{ secrets.DOCUMENT_AI_PROCESSOR_ID }}
      # DOCUMENTAI_MIME_TYPE: ${{ secrets.DOCUMENTAI_MIME_TYPE }}
      # GOOGLE_CLOUD_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
      # GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      # GOOGLE_DOCUMENT_ENDPOINT: ${{ secrets.GOOGLE_DOCUMENT_ENDPOINT }}
      # GOOGLE_CLOUD_LOCATION: ${{ secrets.GOOGLE_CLOUD_LOCATION }}
      # private_key_id: ${{ secrets.private_key_id }}
      # private_key: ${{ secrets.private_key }}
      # client_email: ${{ secrets.client_email }}
      # client_id: ${{ secrets.client_id }}
      # auth_uri: ${{ secrets.auth_uri }}
      # token_uri: ${{ secrets.token_uri }}
      # auth_provider_x509_cert_url: ${{ secrets.auth_provider_x509_cert_url }}
      # client_x509_cert_url: ${{ secrets.client_x509_cert_url }}
      # universe_domain: ${{ secrets.universe_domain }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies and Next.js cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run production build
        run: npm run build --if-present --if-changed

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build # â¬… only runs if the `build` job passes
    # env:
    #   STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
    #   STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
    #   NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
    #   OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    #   TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
    #   TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
    #   TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
    #   TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
    #   VITE_PUBLIC_DATABASE_CONNECTION_STRING: ${{ secrets.VITE_PUBLIC_DATABASE_CONNECTION_STRING }}
    #   VITE_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_PUBLIC_CLERK_PUBLISHABLE_KEY }}
    #   VITE_PUBLIC_PAPPAL_Client_ID: ${{ secrets.VITE_PUBLIC_PAPPAL_Client_ID }}
    #   VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    #   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    #   VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy Step
        run: |
          echo "ðŸš€ Deploying your app..."
          vercel deploy --yes --token ${{secrets.VERCEL_TOKEN}}
          # vercel --prod --yes --token ${{secrets.VERCEL_TOKEN}}

          echo "âœ… Deployment complete!"
